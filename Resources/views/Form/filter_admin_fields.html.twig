{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends 'SonataAdminBundle:Form:silex_form_div_layout.html.twig' %}

{% block sonata_type_model_autocomplete_widget %}
{% spaceless %}

    {{ form_widget(form.title) }}

    {% for child in form %}
        {% if not child.rendered %}
            {{ form_widget(child) }}
        {% endif %}
    {% endfor %}

    <script>
        (function ($) {
            var autocompleteInput = $("#{{ form.title.vars.id }}");
            autocompleteInput.select2({
                placeholder: "{{ placeholder }}",
                allowClear: {{ required ? 'false' : 'true' }},
                enable: {{ disabled ? 'false' : 'true' }},
                readonly: {{ read_only ? 'true' : 'false' }},
                minimumInputLength: {{ minimum_input_length }},
                multiple: {{ multiple ? 'true' : 'false' }},
                ajax: {
                    url:  "{{ url ?: url(route.name, route.parameters|default([])) }}",
                    dataType: 'json',
                    quietMillis: 100,
                    data: function (term, page) { // page is the one-based page number tracked by Select2
                        return {
                                //search term
                                "{{ req_param_name_search }}": term,

                                // page size
                                "{{ req_param_name_items_per_page }}": {{ items_per_page }},

                                // page number
                                "{{ req_param_name_page_number }}": page,

                                // admin
                                // 2z -> admin era root
                                'uniqid': "{{ random(1000000) }}",
                                'code':   "{{ dump(sonata_admin.admin) }}",
                                'field':  "{{ name }}"

                                // other parameters
                                {% if req_params is not empty %},
                                    {%- for key, value in req_params -%}
                                        "{{- key|e('js') -}}": "{{- value|e('js') -}}"
                                        {%- if not loop.last -%}, {% endif -%}
                                    {%- endfor -%}
                                {% endif %}
                            };
                    },
                    results: function (data, page) {
                        // notice we return the value of more so Select2 knows if more results can be loaded
                        return {results: data.items, more: data.more};
                    }
                },
                initSelection: function(element, callback) {
                    //remove initial text from input
                    $(element).val("");

                    var data = [];
                    {% if multiple -%}
                        data = [
                        {%- for key, label_text in value.labels -%}
                            {id:{{ value.identifiers[key]|e('js') }}, label:'{{ label_text|e('js') }}'}
                            {%- if not loop.last -%}, {% endif -%}
                        {%- endfor -%}
                        ];
                    {%- elseif value.labels[0] is defined -%}
                        data = {id: {{ value.identifiers[0]|e('js') }}, label:'{{ value.labels[0]|e('js') }}'};
                    {%- endif  %}
                    
                    // 2z ->     
                    //re assign value initial text from input
                    $(element).val(data.id);

                    callback(data);
                },
                formatResult: function (item) {
                    return {% block sonata_type_model_autocomplete_dropdown_item_format %}'<div class="sonata-autocomplete-dropdown-item">'+item.label+'</div>'{% endblock %};// format of one dropdown item
                },
                formatSelection: function (item) {
                    return {% block sonata_type_model_autocomplete_selection_format %}item.label{% endblock %};// format selected item '<b>'+item.label+'</b>';
                },
                dropdownCssClass: "{{ dropdown_css_class }}",
                escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
            });

            autocompleteInput.on("change", function(e) {

                // console.log("change "+JSON.stringify({val:e.val, added:e.added, removed:e.removed}));

                // add new input
                var el = null;
                if (undefined !== e.added) {

                    var addedItems = e.added;

                    if(!$.isArray(addedItems)) {
                        addedItems = [addedItems];
                    }

                    var length = addedItems.length;
                    for (var i = 0; i < length; i++) {
                        el = addedItems[i];
                        $("#{{ form.identifiers.vars.id }}").append('<input type="hidden" name="{{ form.identifiers.vars.full_name }}[]" value="'+el.id+'" />');
                    }
                }

                // remove input
                if (undefined !== e.removed) {
                    var removedItems = e.removed;

                    if(!$.isArray(removedItems)) {
                        removedItems = [removedItems];
                    }

                    var length = removedItems.length;
                    for (var i = 0; i < length; i++) {
                        el = removedItems[i];
                        $('#{{ form.identifiers.vars.id }} input:hidden[value="'+el.id+'"]').remove();
                    }
                }
            });

        })(jQuery);
    </script>
{% endspaceless %}
{% endblock sonata_type_model_autocomplete_widget %}